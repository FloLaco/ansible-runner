name: CI
on:
  push:
    branches:
      - devel

  pull_request:
    branches:
      - devel


jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    container: quay.io/ansible/ansible-runner-test-container:1.0.0
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run linters
        run: tox -e linters


  docs:
    name: Docs
    runs-on: ubuntu-latest
    container: quay.io/ansible/ansible-runner-test-container:1.0.0

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build docs
        run: tox -e docs


  tests:
    name: ${{ matrix.test_type.name }} - ${{ matrix.env.name }}
    runs-on: ubuntu-latest
    container: ${{ matrix.env.image }}

    strategy:
      fail-fast: false
      matrix:
        test_type:
          - name: Unit
            path: test/unit

          - name: Integration
            path: test/integration

        env:
          - name: ansible-base
            tox_env: ansible-base
            image: quay.io/ansible/ansible-runner-test-container:1.0.0

          - name: 3.8
            tox_env: py38
            image: quay.io/ansible/ansible-runner-test-container:1.0.0

          - name: 3.9
            tox_env: py39
            image: quay.io/ansible/ansible-runner-test-container:1.0.0

    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJSON(job) }}
        run: echo "$JOB_CONTEXT"

      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJSON(steps) }}
        run: echo "$STEPS_CONTEXT"

      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
        run: echo "$STRATEGY_CONTEXT"

      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJSON(matrix) }}
        run: echo "$MATRIX_CONTEXT"

      - name: Checkout
        uses: actions/checkout@v2

      - name: Tests
        run: tox -e ${{ matrix.env.tox_env }} ${{ matrix.test_type.path }}

      - name: Upload coverage data
        continue-on-error: true
        run: codecov --file test/coverage/coverage.xml --name ${{ job.tests.name }}
